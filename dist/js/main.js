(function () {
    'use strict';

    document.querySelectorAll('.range-input').forEach((rangeInput) => {
        const rangeContainer = rangeInput.closest('.range');
        const marks = rangeContainer.querySelectorAll('.range-mark');

        function updateMarks(value) {
            marks.forEach((mark, i) => {
                mark.style.visibility = (i == value) ? 'hidden' : 'visible';
            });
        }

        rangeInput.addEventListener('input', (e) => {
            updateMarks(+e.target.value);
        });

        updateMarks(+rangeInput.value);
    });

    document.querySelectorAll('.calculator__period-switcher').forEach((switcher) => {
        const left = switcher.querySelector('.switcher__left');
        const right = switcher.querySelector('.switcher__right');

        left.addEventListener('click', () => {
            left.classList.add('switcher__active');
            right.classList.remove('switcher__active');
        });

        right.addEventListener('click', () => {
            right.classList.add('switcher__active');
            left.classList.remove('switcher__active');
        });
    });


    document.addEventListener("DOMContentLoaded", () => {
        const userRange = document.getElementById("calculator__users-range");
        const userInput = document.querySelector(".calculator__users-count");
        const regionRange = document.getElementById("calculator__region-range");
        const regionInput = document.querySelector(".calculator__region-count");
        const resetButton = document.querySelector(".calculator__reset");

        const userValues = [10, 20, 30, 40, 50, 100];
        const regionValues = [1, 2, 3, 4, 5, 10];

        const basePrices = {
            base: 15000,
            standard: 25000,
            profi: 35000
        };

        const costTitles = {
            base: document.querySelector(".costs__base .costs__title + .costs__main-info + h5"),
            standard: document.querySelector(".costs__standart .costs__title + .costs__main-info + h5"),
            profi: document.querySelector(".costs__profi .costs__title + .costs__main-info + h5")
        };

        const userCards = document.querySelectorAll(".costs__block .costs__main-info .costs__item:nth-child(1) .costs__item-value");
        const regionCards = document.querySelectorAll(".costs__block .costs__main-info .costs__item:nth-child(2) .costs__item-value");

        const defaultUsers = userValues[0];
        const defaultRegions = regionValues[0];
        let isYearly = false;

        function updateMarks(rangeInput) {
            const rangeContainer = rangeInput.closest('.range');
            const marks = rangeContainer.querySelectorAll('.range-mark');
            marks.forEach((mark, i) => {
                mark.style.visibility = (i == +rangeInput.value) ? 'hidden' : 'visible';
            });
        }

        function updateCards(nodeList, value) {
            nodeList.forEach(el => el.textContent = value);
        }

        function updatePrices() {
            const users = parseInt(userInput.value, 10);
            const regions = parseInt(regionInput.value, 10);

            Object.keys(basePrices).forEach(plan => {
                let price = basePrices[plan];

                if (users > 10) {
                    price += Math.floor((users - 10) / 10) * 1000;
                }

                if (regions > 1) {
                    price += (regions - 1) * 1000;
                }

                if (isYearly) {
                    price = price * 12 * 0.7;
                    costTitles[plan].textContent = `${price.toLocaleString("ru-RU")} ₽/год`;
                } else {
                    costTitles[plan].textContent = `${price.toLocaleString("ru-RU")} ₽/месяц`;
                }
            });
        }

        function updateResetState() {
            resetButton.disabled =
                +userInput.value === defaultUsers &&
                +regionInput.value === defaultRegions &&
                !isYearly;
        }

        function syncSlider(input, slider, valuesArray) {
            const value = parseInt(input.value, 10);
            let index = valuesArray.indexOf(value);

            if (index === -1) {
                if (value < valuesArray[0]) {
                    index = 0;
                } else if (value > valuesArray[valuesArray.length - 1]) {
                    index = valuesArray.length - 1;
                } else {
                    index = valuesArray.findIndex(v => v >= value);
                }
            }

            slider.value = index;
            updateMarks(slider);
        }

        function handleSlider(slider, input, valuesArray, cardNodes) {
            slider.addEventListener("input", () => {
                const index = parseInt(slider.value, 10);
                const value = valuesArray[index];
                input.value = value;
                updateCards(cardNodes, value);
                updateMarks(slider);
                updatePrices();
                updateResetState();
            });
        }

        function handleInput(input, slider, valuesArray, cardNodes) {
            input.addEventListener("input", () => {
                const value = parseInt(input.value, 10);
                if (!isNaN(value)) {
                    updateCards(cardNodes, value);
                    syncSlider(input, slider, valuesArray);
                    updatePrices();
                    updateResetState();
                }
            });
        }

        function handleReset() {
            resetButton.addEventListener("click", () => {
                userRange.value = 0;
                regionRange.value = 0;
                userInput.value = defaultUsers;
                regionInput.value = defaultRegions;
                isYearly = false;
                document.querySelector(".switcher__left").classList.add("switcher__active");
                document.querySelector(".switcher__right").classList.remove("switcher__active");
                updateCards(userCards, defaultUsers);
                updateCards(regionCards, defaultRegions);
                updateMarks(userRange);
                updateMarks(regionRange);
                updatePrices();
                resetButton.disabled = true;
            });
        }

        document.querySelectorAll('.calculator__period-switcher').forEach((switcher) => {
            const left = switcher.querySelector('.switcher__left');
            const right = switcher.querySelector('.switcher__right');

            left.addEventListener('click', () => {
                left.classList.add('switcher__active');
                right.classList.remove('switcher__active');
                isYearly = false;
                updatePrices();
                updateResetState();
            });

            right.addEventListener('click', () => {
                right.classList.add('switcher__active');
                left.classList.remove('switcher__active');
                isYearly = true;
                updatePrices();
                updateResetState();
            });
        });

        function enforceLimits(input, min, max, slider, valuesArray) {
            input.addEventListener("input", () => {
                input.value = input.value.replace(/\D/g, "");

                if (input.value === "") {
                    input.value = min;
                }

                let value = parseInt(input.value, 10);
                if (value < min) value = min;
                if (value > max) value = max;

                input.value = value;
                syncSlider(input, slider, valuesArray);
            });
        }


        enforceLimits(userInput, 1, 1000, userRange, userValues);
        enforceLimits(regionInput, 1, 100, regionRange, regionValues);
        updateMarks(userRange);
        updateMarks(regionRange);
        updateCards(userCards, defaultUsers);
        updateCards(regionCards, defaultRegions);
        updatePrices();

        handleSlider(userRange, userInput, userValues, userCards);
        handleSlider(regionRange, regionInput, regionValues, regionCards);
        handleInput(userInput, userRange, userValues, userCards);
        handleInput(regionInput, regionRange, regionValues, regionCards);
        handleReset();
    });

    const allFeatureBlocks = document.querySelectorAll('.features__block');
    let lastScrollY = window.scrollY;

    allFeatureBlocks.forEach((block) => {
        const desktopCards = block.querySelectorAll('.features__cards_desktop .features__card');
        const mobileCards = block.querySelectorAll('.features__cards_mobile .features__card');

        if (!desktopCards.length && !mobileCards.length) return;

        const mobileCardsContainer = block.querySelector('.features__cards_mobile');

        let currentCardIndex = 0;
        let scrollLocked = false;
        let allowScroll = false;

        const cardsLength = desktopCards.length || mobileCards.length;

        const activateCard = (indexOrElement) => {
            let index;
            if (typeof indexOrElement === 'number') {
                index = indexOrElement;
            } else {
                index = [...desktopCards].indexOf(indexOrElement);
                if (index === -1) {
                    index = [...mobileCards].indexOf(indexOrElement);
                }
            }

            currentCardIndex = index;

            desktopCards.forEach((c, i) => {
                c.classList.toggle('features__card_active', i === index);
            });

            mobileCards.forEach((c, i) => {
                c.classList.toggle('features__card_active', i === index);
            });

            const activeId = desktopCards[index]?.dataset.id || mobileCards[index]?.dataset.id;

            block.querySelectorAll('.features__content-item').forEach(img => {
                img.classList.toggle('active', img.dataset.id === activeId);
            });

            if (mobileCardsContainer && mobileCards[index]) {
                mobileCards[index].scrollIntoView({ behavior: 'smooth', inline: 'center' });
            }
        };

        if (mobileCardsContainer && mobileCards.length) {
            const lastCard = mobileCards[mobileCards.length - 1];

            const mobileScrollObserver = new IntersectionObserver((entries) => {
                const entry = entries[0];
                if (entry.isIntersecting) {
                    allowScroll = true;
                    block.classList.remove('features__block_active');
                }
            }, {
                root: mobileCardsContainer,
                threshold: 0.9,
            });

            mobileScrollObserver.observe(lastCard);
        }

        const scrollHandler = (e) => {
            if (allowScroll || scrollLocked) return;

            const blockRect = block.getBoundingClientRect();

            const scrollingDown = e.deltaY > 0;
            if (!scrollingDown && blockRect.top > window.innerHeight - 100) {
                allowScroll = true;
                window.removeEventListener('wheel', scrollHandler, { passive: false });
                return;
            }

            e.preventDefault();
            scrollLocked = true;

            let nextIndex = scrollingDown
                ? Math.min(cardsLength - 1, currentCardIndex + 1)
                : Math.max(0, currentCardIndex - 1);

            activateCard(nextIndex);

            const isLast = scrollingDown && nextIndex === cardsLength - 1;
            const isFirst = !scrollingDown && nextIndex === 0;

            if (isLast || isFirst) {
                allowScroll = true;
                window.removeEventListener('wheel', scrollHandler, { passive: false });

                setTimeout(() => {
                    block.classList.remove('features__block_active');
                }, 300);
            }

            setTimeout(() => {
                scrollLocked = false;
            }, 400);
        };

        const observer = new IntersectionObserver(
            (entries) => {
                const entry = entries[0];
                const isVisible = entry.isIntersecting && entry.intersectionRatio > 0.5;

                if (!isVisible) return;

                const currentScrollY = window.scrollY;
                const scrollingDown = currentScrollY > lastScrollY;
                lastScrollY = currentScrollY;

                block.classList.add('features__block_active');

                currentCardIndex = scrollingDown ? 0 : cardsLength - 1;
                activateCard(currentCardIndex);

                allowScroll = false;
                scrollLocked = false;

                window.removeEventListener('wheel', scrollHandler, { passive: false });
                window.addEventListener('wheel', scrollHandler, { passive: false });
            },
            { threshold: 0.5 }
        );

        observer.observe(block);
    });

    document.querySelectorAll('.questions__item').forEach(item => {
        const info = item.querySelector('.questions__item-info');
        const img = item.querySelector('.questions__item-img');

        item.addEventListener('click', (e) => {
            if (e.target.closest('a')) return;

            const isActive = item.classList.contains('active');

            if (isActive) {
                item.classList.remove('active');
                info.style.maxHeight = null;
                img.style.transform = 'rotate(0deg)';
            } else {
                item.classList.add('active');
                info.style.maxHeight = info.scrollHeight + 16 + 'px';
                img.style.transform = 'rotate(180deg)';
            }
        });
    });

    // Главное меню
    document.addEventListener("DOMContentLoaded", function () {
        const btn = document.getElementById("btn-dropdown-menu");
        const menu = document.getElementById("dropdown-menu");

        if (btn && menu) {
            btn.addEventListener("click", function (e) {
                e.stopPropagation();
                menu.classList.toggle("show");
            });

            document.addEventListener("click", function (e) {
                if (!btn.contains(e.target)) {
                    menu.classList.remove("show");
                }
            });
        }
    });
    // Мобильное меню
    document.addEventListener("DOMContentLoaded", function () {
        const menuButton = document.querySelector(".nav_mobile .button-icon");
        const mobileMenu = document.querySelector(".nav_mobile-links");

        if (menuButton && mobileMenu) {
            menuButton.addEventListener("click", function (e) {
                e.stopPropagation();
                const isOpening = !mobileMenu.classList.contains("active");

                this.classList.toggle("active", isOpening);

                mobileMenu.classList.toggle("active");
                document.body.classList.toggle("menu-open", isOpening);
                document.body.classList.toggle("menu-backdrop", isOpening);
                //Закрытие выпадающего списка
                const productsButtons = document.querySelectorAll(
                    ".nav_mobile-links_submenu"
                );
                if (productsButtons.length) {
                    productsButtons.forEach((button) => {
                        button.classList.remove("open");
                    });
                }
            });

            // Закрытие меню при клике вне его области
            document.addEventListener("click", function (e) {
                if (
                    !mobileMenu.contains(e.target) &&
                    !menuButton.contains(e.target) &&
                    mobileMenu.classList.contains("active")
                ) {
                    mobileMenu.classList.remove("active");
                    document.body.classList.remove("menu-open");
                    document.body.classList.remove("menu-backdrop");
                }
            });

            // Закрытие меню при клике на ссылки
            document
                .querySelectorAll(
                    ".nav_mobile-link:not(.nav_mobile-links_submenu), .header__sublink-mobile"
                )
                .forEach((link) => {
                    link.addEventListener("click", function () {
                        mobileMenu.classList.remove("active");
                        document.body.classList.remove("menu-open");
                        document.body.classList.remove("menu-backdrop");
                    });
                });
        }

        // Обработчик для выпадающего меню "Продукты" в мобильной версии
        const productsButtons = document.querySelectorAll(
            ".nav_mobile-links_submenu"
        );
        if (productsButtons.length) {
            productsButtons.forEach((button) => {
                button.addEventListener("click", function (e) {
                    // Предотвращаем закрытие меню при клике на подменю
                    e.stopPropagation();

                    // Переключаем состояние только для текущего подменю
                    !this.classList.contains("open");
                    this.classList.toggle("open");

                    // Закрываем другие открытые подменю
                    productsButtons.forEach((otherButton) => {
                        if (
                            otherButton !== this &&
                            otherButton.classList.contains("open")
                        ) {
                            otherButton.classList.remove("open");
                        }
                    });
                });
            });
        }
    });

    function onScroll() {
        const scrollY = document.body.scrollTop;

        const layers = document.querySelectorAll(".layer");
        layers.forEach((layer) => {
            const speed = Number(layer.dataset.speed) || 0.2;
            layer.style.transform = `translate3d(0, -${scrollY * speed}px, 0)`;
        });
    }

    document.body.addEventListener("scroll", onScroll, { passive: true });
    window.addEventListener("resize", onScroll);
    onScroll();

    (function () {
        const carousel = document.querySelector(".partners .carousel-wrapper");
        const track = carousel.querySelector(".track");
        const gap = 16;

        const items = Array.from(track.querySelectorAll(".partner-card"));

        // клонируем элементы, чтобы track > 2 * экран
        function cloneItems() {
            let currentItems = [...items];
            while (getTrackWidth(currentItems) < window.innerWidth * 2) {
                const clones = items.map((el) => el.cloneNode(true));
                clones.forEach((clone) => track.appendChild(clone));
                currentItems = currentItems.concat(clones);
            }
            return currentItems;
        }

        function getTrackWidth(itemArray) {
            let width = 0;
            itemArray.forEach((el) => (width += el.offsetWidth));
            width += (itemArray.length - 1) * gap;
            return width;
        }

        let allItems = cloneItems();
        let totalWidth = getTrackWidth(allItems);
        const wrapWidth = totalWidth / 2; // wrap по половине клонированного блока

        let position = 0;
        const speed = 0.5;
        let raf;

        let paused = false;
        let isDragging = false;
        let startX = 0;
        let dragStartPos = 0;
        let dragged = false;

        let velocity = 0;
        let lastX = 0;
        let lastTime = 0;

        function animate() {
            if (!paused && !isDragging) {
                position -= speed;
                if (position <= -wrapWidth) position += wrapWidth;
                if (position >= 0) position -= wrapWidth;
                track.style.transform = `translate3d(${position}px,0,0)`; // точное GPU-преобразование
            }
            raf = requestAnimationFrame(animate);
        }
        animate();

        carousel.addEventListener("mouseenter", () => (paused = true));
        carousel.addEventListener("mouseleave", () => (paused = false));

        // --- drag ---
        function startDrag(e) {
            isDragging = true;
            dragged = false;
            startX = e.pageX || e.touches[0].pageX;
            dragStartPos = position;
            lastX = startX;
            lastTime = performance.now();
            velocity = 0;
            cancelAnimationFrame(raf);
        }

        function onDrag(e) {
            if (!isDragging) return;
            const x = e.pageX || e.touches[0].pageX;
            const dx = x - startX;
            if (Math.abs(dx) > 3) dragged = true;

            position = dragStartPos + dx;

            // wrap-around
            if (position <= -wrapWidth) position += wrapWidth;
            if (position >= 0) position -= wrapWidth;

            track.style.transform = `translate3d(${position}px,0,0)`;

            // вычисляем мгновенную скорость для инерции
            const now = performance.now();
            const dt = now - lastTime || 1;
            velocity = (x - lastX) / dt;
            lastX = x;
            lastTime = now;
        }

        function endDrag() {
            if (!isDragging) return;
            isDragging = false;
            if (!dragged) {
                animate();
                return;
            }

            let momentum = velocity * 200; // небольшая инерция
            const friction = 0.92;

            function inertia() {
                momentum *= friction;
                //position += momentum;

                // wrap-around
                if (position <= -wrapWidth) position += wrapWidth;
                if (position >= 0) position -= wrapWidth;

                track.style.transform = `translate3d(${position}px,0,0)`;

                if (Math.abs(momentum) > 0.1) {
                    raf = requestAnimationFrame(inertia);
                } else {
                    animate();
                }
            }
            inertia();
        }

        // --- события ---
        carousel.addEventListener("mousedown", startDrag);
        carousel.addEventListener("touchstart", startDrag);
        window.addEventListener("mousemove", onDrag);
        window.addEventListener("touchmove", onDrag);
        window.addEventListener("mouseup", endDrag);
        window.addEventListener("touchend", endDrag);

        track
            .querySelectorAll("a, img")
            .forEach((el) =>
                el.addEventListener("dragstart", (e) => e.preventDefault())
            );
        track.querySelectorAll("a").forEach((link) =>
            link.addEventListener("click", (e) => {
                if (dragged) e.preventDefault();
            })
        );

        // --- resize ---
        window.addEventListener("resize", () => {
            totalWidth = getTrackWidth(allItems);
            raf = requestAnimationFrame(animate);
        });
    })();

    (function () {
        const news_carousels = document.querySelectorAll(".news__carousel");

        news_carousels.forEach((news_carousel) => {
            const news_track = news_carousel.querySelector(".news__track");
            const news_container = news_carousel.closest(".news");
            const news_btnLeft = news_container.querySelector(
                ".news__header-buttons button:first-child"
            );
            const news_btnRight = news_container.querySelector(
                ".news__header-buttons button:last-child"
            );

            let news_position = 0;
            let news_isDragging = false;
            let news_startX = 0;
            let news_downX = 0;
            let news_dragged = false;

            let news_lastX = 0;
            let news_lastTime = 0;
            let news_velocity = 0;
            let news_raf;

            function news_getItemWidth() {
                const item = news_track.querySelector(".news__item");
                const style = getComputedStyle(news_track);
                const gap = parseInt(style.columnGap || style.gap || 0);
                return item.offsetWidth + gap;
            }

            function news_getLimits() {
                const offset = news_container.getBoundingClientRect().left;
                const min = -offset;
                const max = news_track.scrollWidth - window.innerWidth + offset;
                return { min, max };
            }

            function news_updatePosition(animate = true) {
                news_track.style.transition = animate
                    ? "transform 0.4s ease"
                    : "none";
                news_track.style.transform = `translateX(${-news_position}px)`;
                news_updateButtons(); // обновляем состояние кнопок
            }

            function news_updateButtons() {
                const { min, max } = news_getLimits();

                // если все карточки помещаются
                if (news_track.scrollWidth <= window.innerWidth) {
                    news_btnLeft.style.display = "none";
                    news_btnRight.style.display = "none";
                    return;
                } else {
                    news_btnLeft.style.display = "";
                    news_btnRight.style.display = "";
                }

                news_btnLeft.disabled = news_position <= min + 1;
                news_btnRight.disabled = news_position >= max - 1;
            }

            // --- Кнопки ---
            news_btnLeft.addEventListener("click", () => {
                const step = news_getItemWidth();
                const { min } = news_getLimits();
                news_position = Math.max(min, news_position - step);
                news_updatePosition(true);
            });

            news_btnRight.addEventListener("click", () => {
                const step = news_getItemWidth();
                const { max } = news_getLimits();
                news_position = Math.min(max, news_position + step);
                news_updatePosition(true);
            });

            // --- Drag / Swipe с резинкой ---
            function news_onDragMove(clientX) {
                const { min, max } = news_getLimits();
                news_track.style.transition = "none";

                let delta = news_startX - clientX;
                news_position = delta;
                if (news_position < min) {
                    news_position = min - Math.pow(min - news_position, 0.7);
                }
                if (news_position > max) {
                    news_position = max + Math.pow(news_position - max, 0.7);
                }

                news_track.style.transform = `translateX(${-news_position}px)`;

                // скорость для инерции
                const now = Date.now();
                const deltaX = clientX - news_lastX;
                const deltaT = now - news_lastTime || 1;
                news_velocity = deltaX / deltaT;

                news_lastX = clientX;
                news_lastTime = now;
            }

            function news_onDragEnd() {
                if (!news_isDragging) return;
                news_isDragging = false;

                const { min, max } = news_getLimits();

                // корректировка по краям
                if (news_position < min) news_position = min;
                if (news_position > max) news_position = max;

                // инерция
                let momentum = news_velocity * 200;
                let target = news_position - momentum;
                target = Math.max(min, Math.min(max, target));

                cancelAnimationFrame(news_raf);
                const duration = 600;
                const start = news_position;
                const startTime = performance.now();

                function animate(time) {
                    const progress = Math.min(1, (time - startTime) / duration);
                    const ease = 1 - Math.pow(1 - progress, 3);
                    news_position = start + (target - start) * ease;
                    news_track.style.transform = `translateX(${-news_position}px)`;
                    if (progress < 1) {
                        news_raf = requestAnimationFrame(animate);
                    } else {
                        news_updateButtons();
                    }
                }
                requestAnimationFrame(animate);
            }

            // Mouse
            news_carousel.addEventListener("mousedown", (e) => {
                news_isDragging = true;
                news_startX = e.pageX + news_position;
                news_downX = e.pageX;
                news_dragged = false;

                news_lastX = e.pageX;
                news_lastTime = Date.now();
                cancelAnimationFrame(news_raf);
            });

            news_carousel.addEventListener("mousemove", (e) => {
                if (!news_isDragging) return;
                if (Math.abs(e.pageX - news_downX) > 5) news_dragged = true;
                news_onDragMove(e.pageX);
            });

            news_carousel.addEventListener("mouseup", (e) => {
                if (news_dragged) e.preventDefault();
                news_onDragEnd();
            });

            news_carousel.addEventListener("mouseleave", news_onDragEnd);

            // Touch
            news_carousel.addEventListener("touchstart", (e) => {
                news_isDragging = true;
                news_startX = e.touches[0].pageX + news_position;
                news_downX = e.touches[0].pageX;
                news_dragged = false;

                news_lastX = e.touches[0].pageX;
                news_lastTime = Date.now();
                cancelAnimationFrame(news_raf);
            });

            news_carousel.addEventListener("touchmove", (e) => {
                if (!news_isDragging) return;
                if (Math.abs(e.touches[0].pageX - news_downX) > 5)
                    news_dragged = true;
                news_onDragMove(e.touches[0].pageX);
            });

            news_carousel.addEventListener("touchend", (e) => {
                if (news_dragged) e.preventDefault();
                news_onDragEnd();
            });

            // --- Ссылки и картинки ---
            news_track.querySelectorAll("a, img").forEach((el) => {
                el.addEventListener("dragstart", (e) => e.preventDefault());
            });

            news_track.querySelectorAll("a").forEach((link) => {
                link.addEventListener("click", (e) => {
                    if (news_dragged) e.preventDefault();
                });
            });

            // --- Инициализация ---
            const { min } = news_getLimits();
            news_position = min;
            news_updatePosition(false);

            window.addEventListener("resize", () => {
                const { min, max } = news_getLimits();
                news_position = Math.max(min, Math.min(max, news_position));
                news_updatePosition(false);
            });
        });
    })();

})();
//# sourceMappingURL=main.js.map

//# sourceMappingURL=data:application/json;charset=utf-8;base64,{"version":3,"file":"main.js","sources":["src/js/common/price.js","src/js/common/features.js","src/js/common/questions.js","src/js/common/header.js","src/js/common/parallax-bg.js","src/js/common/carousel.js","src/js/common/news-carousel.js"],"sourcesContent":["document.querySelectorAll('.range-input').forEach((rangeInput) => {\n    const rangeContainer = rangeInput.closest('.range');\n    const marks = rangeContainer.querySelectorAll('.range-mark');\n\n    function updateMarks(value) {\n        marks.forEach((mark, i) => {\n            mark.style.visibility = (i == value) ? 'hidden' : 'visible';\n        });\n    }\n\n    rangeInput.addEventListener('input', (e) => {\n        updateMarks(+e.target.value);\n    });\n\n    updateMarks(+rangeInput.value);\n});\n\ndocument.querySelectorAll('.calculator__period-switcher').forEach((switcher) => {\n    const left = switcher.querySelector('.switcher__left');\n    const right = switcher.querySelector('.switcher__right');\n\n    left.addEventListener('click', () => {\n        left.classList.add('switcher__active');\n        right.classList.remove('switcher__active');\n    });\n\n    right.addEventListener('click', () => {\n        right.classList.add('switcher__active');\n        left.classList.remove('switcher__active');\n    });\n});\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const userRange = document.getElementById(\"calculator__users-range\");\n    const userInput = document.querySelector(\".calculator__users-count\");\n    const regionRange = document.getElementById(\"calculator__region-range\");\n    const regionInput = document.querySelector(\".calculator__region-count\");\n    const resetButton = document.querySelector(\".calculator__reset\");\n\n    const userValues = [10, 20, 30, 40, 50, 100];\n    const regionValues = [1, 2, 3, 4, 5, 10];\n\n    const basePrices = {\n        base: 15000,\n        standard: 25000,\n        profi: 35000\n    };\n\n    const costTitles = {\n        base: document.querySelector(\".costs__base .costs__title + .costs__main-info + h5\"),\n        standard: document.querySelector(\".costs__standart .costs__title + .costs__main-info + h5\"),\n        profi: document.querySelector(\".costs__profi .costs__title + .costs__main-info + h5\")\n    };\n\n    const userCards = document.querySelectorAll(\".costs__block .costs__main-info .costs__item:nth-child(1) .costs__item-value\");\n    const regionCards = document.querySelectorAll(\".costs__block .costs__main-info .costs__item:nth-child(2) .costs__item-value\");\n\n    const defaultUsers = userValues[0];\n    const defaultRegions = regionValues[0];\n    let isYearly = false;\n\n    function updateMarks(rangeInput) {\n        const rangeContainer = rangeInput.closest('.range');\n        const marks = rangeContainer.querySelectorAll('.range-mark');\n        marks.forEach((mark, i) => {\n            mark.style.visibility = (i == +rangeInput.value) ? 'hidden' : 'visible';\n        });\n    }\n\n    function updateCards(nodeList, value) {\n        nodeList.forEach(el => el.textContent = value);\n    }\n\n    function updatePrices() {\n        const users = parseInt(userInput.value, 10);\n        const regions = parseInt(regionInput.value, 10);\n\n        Object.keys(basePrices).forEach(plan => {\n            let price = basePrices[plan];\n\n            if (users > 10) {\n                price += Math.floor((users - 10) / 10) * 1000;\n            }\n\n            if (regions > 1) {\n                price += (regions - 1) * 1000;\n            }\n\n            if (isYearly) {\n                price = price * 12 * 0.7;\n                costTitles[plan].textContent = `${price.toLocaleString(\"ru-RU\")} ₽/год`;\n            } else {\n                costTitles[plan].textContent = `${price.toLocaleString(\"ru-RU\")} ₽/месяц`;\n            }\n        });\n    }\n\n    function updateResetState() {\n        resetButton.disabled =\n            +userInput.value === defaultUsers &&\n            +regionInput.value === defaultRegions &&\n            !isYearly;\n    }\n\n    function syncSlider(input, slider, valuesArray) {\n        const value = parseInt(input.value, 10);\n        let index = valuesArray.indexOf(value);\n\n        if (index === -1) {\n            if (value < valuesArray[0]) {\n                index = 0;\n            } else if (value > valuesArray[valuesArray.length - 1]) {\n                index = valuesArray.length - 1;\n            } else {\n                index = valuesArray.findIndex(v => v >= value);\n            }\n        }\n\n        slider.value = index;\n        updateMarks(slider);\n    }\n\n    function handleSlider(slider, input, valuesArray, cardNodes) {\n        slider.addEventListener(\"input\", () => {\n            const index = parseInt(slider.value, 10);\n            const value = valuesArray[index];\n            input.value = value;\n            updateCards(cardNodes, value);\n            updateMarks(slider);\n            updatePrices();\n            updateResetState();\n        });\n    }\n\n    function handleInput(input, slider, valuesArray, cardNodes) {\n        input.addEventListener(\"input\", () => {\n            const value = parseInt(input.value, 10);\n            if (!isNaN(value)) {\n                updateCards(cardNodes, value);\n                syncSlider(input, slider, valuesArray);\n                updatePrices();\n                updateResetState();\n            }\n        });\n    }\n\n    function handleReset() {\n        resetButton.addEventListener(\"click\", () => {\n            userRange.value = 0;\n            regionRange.value = 0;\n            userInput.value = defaultUsers;\n            regionInput.value = defaultRegions;\n            isYearly = false;\n            document.querySelector(\".switcher__left\").classList.add(\"switcher__active\");\n            document.querySelector(\".switcher__right\").classList.remove(\"switcher__active\");\n            updateCards(userCards, defaultUsers);\n            updateCards(regionCards, defaultRegions);\n            updateMarks(userRange);\n            updateMarks(regionRange);\n            updatePrices();\n            resetButton.disabled = true;\n        });\n    }\n\n    document.querySelectorAll('.calculator__period-switcher').forEach((switcher) => {\n        const left = switcher.querySelector('.switcher__left');\n        const right = switcher.querySelector('.switcher__right');\n\n        left.addEventListener('click', () => {\n            left.classList.add('switcher__active');\n            right.classList.remove('switcher__active');\n            isYearly = false;\n            updatePrices();\n            updateResetState();\n        });\n\n        right.addEventListener('click', () => {\n            right.classList.add('switcher__active');\n            left.classList.remove('switcher__active');\n            isYearly = true;\n            updatePrices();\n            updateResetState();\n        });\n    });\n\n    function enforceLimits(input, min, max, slider, valuesArray) {\n        input.addEventListener(\"input\", () => {\n            input.value = input.value.replace(/\\D/g, \"\");\n\n            if (input.value === \"\") {\n                input.value = min;\n            }\n\n            let value = parseInt(input.value, 10);\n            if (value < min) value = min;\n            if (value > max) value = max;\n\n            input.value = value;\n            syncSlider(input, slider, valuesArray);\n        });\n    }\n\n\n    enforceLimits(userInput, 1, 1000, userRange, userValues);\n    enforceLimits(regionInput, 1, 100, regionRange, regionValues);\n    updateMarks(userRange);\n    updateMarks(regionRange);\n    updateCards(userCards, defaultUsers);\n    updateCards(regionCards, defaultRegions);\n    updatePrices();\n\n    handleSlider(userRange, userInput, userValues, userCards);\n    handleSlider(regionRange, regionInput, regionValues, regionCards);\n    handleInput(userInput, userRange, userValues, userCards);\n    handleInput(regionInput, regionRange, regionValues, regionCards);\n    handleReset();\n});\n\n\n\n","\"use strict\";\n\nconst allFeatureBlocks = document.querySelectorAll('.features__block');\nlet lastScrollY = window.scrollY;\n\nallFeatureBlocks.forEach((block) => {\n    const desktopCards = block.querySelectorAll('.features__cards_desktop .features__card');\n    const mobileCards = block.querySelectorAll('.features__cards_mobile .features__card');\n\n    if (!desktopCards.length && !mobileCards.length) return;\n\n    const mobileCardsContainer = block.querySelector('.features__cards_mobile');\n\n    let currentCardIndex = 0;\n    let scrollLocked = false;\n    let allowScroll = false;\n\n    const cardsLength = desktopCards.length || mobileCards.length;\n\n    const activateCard = (indexOrElement) => {\n        let index;\n        if (typeof indexOrElement === 'number') {\n            index = indexOrElement;\n        } else {\n            index = [...desktopCards].indexOf(indexOrElement);\n            if (index === -1) {\n                index = [...mobileCards].indexOf(indexOrElement);\n            }\n        }\n\n        currentCardIndex = index;\n\n        desktopCards.forEach((c, i) => {\n            c.classList.toggle('features__card_active', i === index);\n        });\n\n        mobileCards.forEach((c, i) => {\n            c.classList.toggle('features__card_active', i === index);\n        });\n\n        const activeId = desktopCards[index]?.dataset.id || mobileCards[index]?.dataset.id;\n\n        block.querySelectorAll('.features__content-item').forEach(img => {\n            img.classList.toggle('active', img.dataset.id === activeId);\n        });\n\n        if (mobileCardsContainer && mobileCards[index]) {\n            mobileCards[index].scrollIntoView({ behavior: 'smooth', inline: 'center' });\n        }\n    };\n\n    if (mobileCardsContainer && mobileCards.length) {\n        const lastCard = mobileCards[mobileCards.length - 1];\n\n        const mobileScrollObserver = new IntersectionObserver((entries) => {\n            const entry = entries[0];\n            if (entry.isIntersecting) {\n                allowScroll = true;\n                block.classList.remove('features__block_active');\n            }\n        }, {\n            root: mobileCardsContainer,\n            threshold: 0.9,\n        });\n\n        mobileScrollObserver.observe(lastCard);\n    }\n\n    const scrollHandler = (e) => {\n        if (allowScroll || scrollLocked) return;\n\n        const blockRect = block.getBoundingClientRect();\n\n        const scrollingDown = e.deltaY > 0;\n        if (!scrollingDown && blockRect.top > window.innerHeight - 100) {\n            allowScroll = true;\n            window.removeEventListener('wheel', scrollHandler, { passive: false });\n            return;\n        }\n\n        e.preventDefault();\n        scrollLocked = true;\n\n        let nextIndex = scrollingDown\n            ? Math.min(cardsLength - 1, currentCardIndex + 1)\n            : Math.max(0, currentCardIndex - 1);\n\n        activateCard(nextIndex);\n\n        const isLast = scrollingDown && nextIndex === cardsLength - 1;\n        const isFirst = !scrollingDown && nextIndex === 0;\n\n        if (isLast || isFirst) {\n            allowScroll = true;\n            window.removeEventListener('wheel', scrollHandler, { passive: false });\n\n            setTimeout(() => {\n                block.classList.remove('features__block_active');\n            }, 300);\n        }\n\n        setTimeout(() => {\n            scrollLocked = false;\n        }, 400);\n    };\n\n    const observer = new IntersectionObserver(\n        (entries) => {\n            const entry = entries[0];\n            const isVisible = entry.isIntersecting && entry.intersectionRatio > 0.5;\n\n            if (!isVisible) return;\n\n            const currentScrollY = window.scrollY;\n            const scrollingDown = currentScrollY > lastScrollY;\n            lastScrollY = currentScrollY;\n\n            block.classList.add('features__block_active');\n\n            currentCardIndex = scrollingDown ? 0 : cardsLength - 1;\n            activateCard(currentCardIndex);\n\n            allowScroll = false;\n            scrollLocked = false;\n\n            window.removeEventListener('wheel', scrollHandler, { passive: false });\n            window.addEventListener('wheel', scrollHandler, { passive: false });\n        },\n        { threshold: 0.5 }\n    );\n\n    observer.observe(block);\n});\n","document.querySelectorAll('.questions__item').forEach(item => {\n    const info = item.querySelector('.questions__item-info');\n    const img = item.querySelector('.questions__item-img');\n\n    item.addEventListener('click', (e) => {\n        if (e.target.closest('a')) return;\n\n        const isActive = item.classList.contains('active');\n\n        if (isActive) {\n            item.classList.remove('active');\n            info.style.maxHeight = null;\n            img.style.transform = 'rotate(0deg)';\n        } else {\n            item.classList.add('active');\n            info.style.maxHeight = info.scrollHeight + 16 + 'px';\n            img.style.transform = 'rotate(180deg)';\n        }\n    });\n});\n","// Главное меню\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    const btn = document.getElementById(\"btn-dropdown-menu\");\n    const menu = document.getElementById(\"dropdown-menu\");\n\n    if (btn && menu) {\n        btn.addEventListener(\"click\", function (e) {\n            e.stopPropagation();\n            menu.classList.toggle(\"show\");\n        });\n\n        document.addEventListener(\"click\", function (e) {\n            if (!btn.contains(e.target)) {\n                menu.classList.remove(\"show\");\n            }\n        });\n    }\n});\n// Мобильное меню\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    const menuButton = document.querySelector(\".nav_mobile .button-icon\");\n    const mobileMenu = document.querySelector(\".nav_mobile-links\");\n\n    if (menuButton && mobileMenu) {\n        menuButton.addEventListener(\"click\", function (e) {\n            e.stopPropagation();\n            const isOpening = !mobileMenu.classList.contains(\"active\");\n\n            this.classList.toggle(\"active\", isOpening);\n\n            mobileMenu.classList.toggle(\"active\");\n            document.body.classList.toggle(\"menu-open\", isOpening);\n            document.body.classList.toggle(\"menu-backdrop\", isOpening);\n            //Закрытие выпадающего списка\n            const productsButtons = document.querySelectorAll(\n                \".nav_mobile-links_submenu\"\n            );\n            if (productsButtons.length) {\n                productsButtons.forEach((button) => {\n                    button.classList.remove(\"open\");\n                });\n            }\n        });\n\n        // Закрытие меню при клике вне его области\n        document.addEventListener(\"click\", function (e) {\n            if (\n                !mobileMenu.contains(e.target) &&\n                !menuButton.contains(e.target) &&\n                mobileMenu.classList.contains(\"active\")\n            ) {\n                mobileMenu.classList.remove(\"active\");\n                document.body.classList.remove(\"menu-open\");\n                document.body.classList.remove(\"menu-backdrop\");\n            }\n        });\n\n        // Закрытие меню при клике на ссылки\n        document\n            .querySelectorAll(\n                \".nav_mobile-link:not(.nav_mobile-links_submenu), .header__sublink-mobile\"\n            )\n            .forEach((link) => {\n                link.addEventListener(\"click\", function () {\n                    mobileMenu.classList.remove(\"active\");\n                    document.body.classList.remove(\"menu-open\");\n                    document.body.classList.remove(\"menu-backdrop\");\n                });\n            });\n    }\n\n    // Обработчик для выпадающего меню \"Продукты\" в мобильной версии\n    const productsButtons = document.querySelectorAll(\n        \".nav_mobile-links_submenu\"\n    );\n    if (productsButtons.length) {\n        productsButtons.forEach((button) => {\n            button.addEventListener(\"click\", function (e) {\n                // Предотвращаем закрытие меню при клике на подменю\n                e.stopPropagation();\n\n                // Переключаем состояние только для текущего подменю\n                const isOpening = !this.classList.contains(\"open\");\n                this.classList.toggle(\"open\");\n\n                // Закрываем другие открытые подменю\n                productsButtons.forEach((otherButton) => {\n                    if (\n                        otherButton !== this &&\n                        otherButton.classList.contains(\"open\")\n                    ) {\n                        otherButton.classList.remove(\"open\");\n                    }\n                });\n            });\n        });\n    }\n});\n","function onScroll() {\n    const scrollY = document.body.scrollTop;\n\n    const layers = document.querySelectorAll(\".layer\");\n    layers.forEach((layer) => {\n        const speed = Number(layer.dataset.speed) || 0.2;\n        layer.style.transform = `translate3d(0, -${scrollY * speed}px, 0)`;\n    });\n}\n\ndocument.body.addEventListener(\"scroll\", onScroll, { passive: true });\nwindow.addEventListener(\"resize\", onScroll);\nonScroll();\n","(function () {\n    const carousel = document.querySelector(\".partners .carousel-wrapper\");\n    const track = carousel.querySelector(\".track\");\n    const gap = 16;\n\n    const items = Array.from(track.querySelectorAll(\".partner-card\"));\n\n    // клонируем элементы, чтобы track > 2 * экран\n    function cloneItems() {\n        let currentItems = [...items];\n        while (getTrackWidth(currentItems) < window.innerWidth * 2) {\n            const clones = items.map((el) => el.cloneNode(true));\n            clones.forEach((clone) => track.appendChild(clone));\n            currentItems = currentItems.concat(clones);\n        }\n        return currentItems;\n    }\n\n    function getTrackWidth(itemArray) {\n        let width = 0;\n        itemArray.forEach((el) => (width += el.offsetWidth));\n        width += (itemArray.length - 1) * gap;\n        return width;\n    }\n\n    let allItems = cloneItems();\n    let totalWidth = getTrackWidth(allItems);\n    const wrapWidth = totalWidth / 2; // wrap по половине клонированного блока\n\n    let position = 0;\n    const speed = 0.5;\n    let raf;\n\n    let paused = false;\n    let isDragging = false;\n    let startX = 0;\n    let dragStartPos = 0;\n    let dragged = false;\n\n    let velocity = 0;\n    let lastX = 0;\n    let lastTime = 0;\n\n    function animate() {\n        if (!paused && !isDragging) {\n            position -= speed;\n            if (position <= -wrapWidth) position += wrapWidth;\n            if (position >= 0) position -= wrapWidth;\n            track.style.transform = `translate3d(${position}px,0,0)`; // точное GPU-преобразование\n        }\n        raf = requestAnimationFrame(animate);\n    }\n    animate();\n\n    carousel.addEventListener(\"mouseenter\", () => (paused = true));\n    carousel.addEventListener(\"mouseleave\", () => (paused = false));\n\n    // --- drag ---\n    function startDrag(e) {\n        isDragging = true;\n        dragged = false;\n        startX = e.pageX || e.touches[0].pageX;\n        dragStartPos = position;\n        lastX = startX;\n        lastTime = performance.now();\n        velocity = 0;\n        cancelAnimationFrame(raf);\n    }\n\n    function onDrag(e) {\n        if (!isDragging) return;\n        const x = e.pageX || e.touches[0].pageX;\n        const dx = x - startX;\n        if (Math.abs(dx) > 3) dragged = true;\n\n        position = dragStartPos + dx;\n\n        // wrap-around\n        if (position <= -wrapWidth) position += wrapWidth;\n        if (position >= 0) position -= wrapWidth;\n\n        track.style.transform = `translate3d(${position}px,0,0)`;\n\n        // вычисляем мгновенную скорость для инерции\n        const now = performance.now();\n        const dt = now - lastTime || 1;\n        velocity = (x - lastX) / dt;\n        lastX = x;\n        lastTime = now;\n    }\n\n    function endDrag() {\n        if (!isDragging) return;\n        isDragging = false;\n        if (!dragged) {\n            animate();\n            return;\n        }\n\n        let momentum = velocity * 200; // небольшая инерция\n        const friction = 0.92;\n\n        function inertia() {\n            momentum *= friction;\n            //position += momentum;\n\n            // wrap-around\n            if (position <= -wrapWidth) position += wrapWidth;\n            if (position >= 0) position -= wrapWidth;\n\n            track.style.transform = `translate3d(${position}px,0,0)`;\n\n            if (Math.abs(momentum) > 0.1) {\n                raf = requestAnimationFrame(inertia);\n            } else {\n                animate();\n            }\n        }\n        inertia();\n    }\n\n    // --- события ---\n    carousel.addEventListener(\"mousedown\", startDrag);\n    carousel.addEventListener(\"touchstart\", startDrag);\n    window.addEventListener(\"mousemove\", onDrag);\n    window.addEventListener(\"touchmove\", onDrag);\n    window.addEventListener(\"mouseup\", endDrag);\n    window.addEventListener(\"touchend\", endDrag);\n\n    track\n        .querySelectorAll(\"a, img\")\n        .forEach((el) =>\n            el.addEventListener(\"dragstart\", (e) => e.preventDefault())\n        );\n    track.querySelectorAll(\"a\").forEach((link) =>\n        link.addEventListener(\"click\", (e) => {\n            if (dragged) e.preventDefault();\n        })\n    );\n\n    // --- resize ---\n    window.addEventListener(\"resize\", () => {\n        totalWidth = getTrackWidth(allItems);\n        raf = requestAnimationFrame(animate);\n    });\n})();\n","(function () {\n    const news_carousels = document.querySelectorAll(\".news__carousel\");\n\n    news_carousels.forEach((news_carousel) => {\n        const news_track = news_carousel.querySelector(\".news__track\");\n        const news_container = news_carousel.closest(\".news\");\n        const news_btnLeft = news_container.querySelector(\n            \".news__header-buttons button:first-child\"\n        );\n        const news_btnRight = news_container.querySelector(\n            \".news__header-buttons button:last-child\"\n        );\n\n        let news_position = 0;\n        let news_isDragging = false;\n        let news_startX = 0;\n        let news_downX = 0;\n        let news_dragged = false;\n\n        let news_lastX = 0;\n        let news_lastTime = 0;\n        let news_velocity = 0;\n        let news_raf;\n\n        function news_getItemWidth() {\n            const item = news_track.querySelector(\".news__item\");\n            const style = getComputedStyle(news_track);\n            const gap = parseInt(style.columnGap || style.gap || 0);\n            return item.offsetWidth + gap;\n        }\n\n        function news_getLimits() {\n            const offset = news_container.getBoundingClientRect().left;\n            const min = -offset;\n            const max = news_track.scrollWidth - window.innerWidth + offset;\n            return { min, max };\n        }\n\n        function news_updatePosition(animate = true) {\n            news_track.style.transition = animate\n                ? \"transform 0.4s ease\"\n                : \"none\";\n            news_track.style.transform = `translateX(${-news_position}px)`;\n            news_updateButtons(); // обновляем состояние кнопок\n        }\n\n        function news_updateButtons() {\n            const { min, max } = news_getLimits();\n\n            // если все карточки помещаются\n            if (news_track.scrollWidth <= window.innerWidth) {\n                news_btnLeft.style.display = \"none\";\n                news_btnRight.style.display = \"none\";\n                return;\n            } else {\n                news_btnLeft.style.display = \"\";\n                news_btnRight.style.display = \"\";\n            }\n\n            news_btnLeft.disabled = news_position <= min + 1;\n            news_btnRight.disabled = news_position >= max - 1;\n        }\n\n        // --- Кнопки ---\n        news_btnLeft.addEventListener(\"click\", () => {\n            const step = news_getItemWidth();\n            const { min } = news_getLimits();\n            news_position = Math.max(min, news_position - step);\n            news_updatePosition(true);\n        });\n\n        news_btnRight.addEventListener(\"click\", () => {\n            const step = news_getItemWidth();\n            const { max } = news_getLimits();\n            news_position = Math.min(max, news_position + step);\n            news_updatePosition(true);\n        });\n\n        // --- Drag / Swipe с резинкой ---\n        function news_onDragMove(clientX) {\n            const { min, max } = news_getLimits();\n            news_track.style.transition = \"none\";\n\n            let delta = news_startX - clientX;\n            news_position = delta;\n\n            const overscroll = 100; // резинка\n            if (news_position < min) {\n                news_position = min - Math.pow(min - news_position, 0.7);\n            }\n            if (news_position > max) {\n                news_position = max + Math.pow(news_position - max, 0.7);\n            }\n\n            news_track.style.transform = `translateX(${-news_position}px)`;\n\n            // скорость для инерции\n            const now = Date.now();\n            const deltaX = clientX - news_lastX;\n            const deltaT = now - news_lastTime || 1;\n            news_velocity = deltaX / deltaT;\n\n            news_lastX = clientX;\n            news_lastTime = now;\n        }\n\n        function news_onDragEnd() {\n            if (!news_isDragging) return;\n            news_isDragging = false;\n\n            const { min, max } = news_getLimits();\n\n            // корректировка по краям\n            if (news_position < min) news_position = min;\n            if (news_position > max) news_position = max;\n\n            // инерция\n            let momentum = news_velocity * 200;\n            let target = news_position - momentum;\n            target = Math.max(min, Math.min(max, target));\n\n            cancelAnimationFrame(news_raf);\n            const duration = 600;\n            const start = news_position;\n            const startTime = performance.now();\n\n            function animate(time) {\n                const progress = Math.min(1, (time - startTime) / duration);\n                const ease = 1 - Math.pow(1 - progress, 3);\n                news_position = start + (target - start) * ease;\n                news_track.style.transform = `translateX(${-news_position}px)`;\n                if (progress < 1) {\n                    news_raf = requestAnimationFrame(animate);\n                } else {\n                    news_updateButtons();\n                }\n            }\n            requestAnimationFrame(animate);\n        }\n\n        // Mouse\n        news_carousel.addEventListener(\"mousedown\", (e) => {\n            news_isDragging = true;\n            news_startX = e.pageX + news_position;\n            news_downX = e.pageX;\n            news_dragged = false;\n\n            news_lastX = e.pageX;\n            news_lastTime = Date.now();\n            cancelAnimationFrame(news_raf);\n        });\n\n        news_carousel.addEventListener(\"mousemove\", (e) => {\n            if (!news_isDragging) return;\n            if (Math.abs(e.pageX - news_downX) > 5) news_dragged = true;\n            news_onDragMove(e.pageX);\n        });\n\n        news_carousel.addEventListener(\"mouseup\", (e) => {\n            if (news_dragged) e.preventDefault();\n            news_onDragEnd();\n        });\n\n        news_carousel.addEventListener(\"mouseleave\", news_onDragEnd);\n\n        // Touch\n        news_carousel.addEventListener(\"touchstart\", (e) => {\n            news_isDragging = true;\n            news_startX = e.touches[0].pageX + news_position;\n            news_downX = e.touches[0].pageX;\n            news_dragged = false;\n\n            news_lastX = e.touches[0].pageX;\n            news_lastTime = Date.now();\n            cancelAnimationFrame(news_raf);\n        });\n\n        news_carousel.addEventListener(\"touchmove\", (e) => {\n            if (!news_isDragging) return;\n            if (Math.abs(e.touches[0].pageX - news_downX) > 5)\n                news_dragged = true;\n            news_onDragMove(e.touches[0].pageX);\n        });\n\n        news_carousel.addEventListener(\"touchend\", (e) => {\n            if (news_dragged) e.preventDefault();\n            news_onDragEnd();\n        });\n\n        // --- Ссылки и картинки ---\n        news_track.querySelectorAll(\"a, img\").forEach((el) => {\n            el.addEventListener(\"dragstart\", (e) => e.preventDefault());\n        });\n\n        news_track.querySelectorAll(\"a\").forEach((link) => {\n            link.addEventListener(\"click\", (e) => {\n                if (news_dragged) e.preventDefault();\n            });\n        });\n\n        // --- Инициализация ---\n        const { min } = news_getLimits();\n        news_position = min;\n        news_updatePosition(false);\n\n        window.addEventListener(\"resize\", () => {\n            const { min, max } = news_getLimits();\n            news_position = Math.max(min, Math.min(max, news_position));\n            news_updatePosition(false);\n        });\n    });\n})();\n"],"names":[],"mappings":"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"}