(function () {
    'use strict';

    document.querySelectorAll('.range-input').forEach((rangeInput) => {
        const rangeContainer = rangeInput.closest('.range');
        const marks = rangeContainer.querySelectorAll('.range-mark');

        function updateMarks(value) {
            marks.forEach((mark, i) => {
                mark.style.visibility = (i == value) ? 'hidden' : 'visible';
            });
        }

        rangeInput.addEventListener('input', (e) => {
            updateMarks(+e.target.value);
        });

        updateMarks(+rangeInput.value);
    });

    document.querySelectorAll('.calculator__period-switcher').forEach((switcher) => {
        const left = switcher.querySelector('.switcher__left');
        const right = switcher.querySelector('.switcher__right');

        left.addEventListener('click', () => {
            left.classList.add('switcher__active');
            right.classList.remove('switcher__active');
        });

        right.addEventListener('click', () => {
            right.classList.add('switcher__active');
            left.classList.remove('switcher__active');
        });
    });


    document.addEventListener("DOMContentLoaded", () => {
        const userRange = document.getElementById("calculator__users-range");
        const userInput = document.querySelector(".calculator__users-count");
        const regionRange = document.getElementById("calculator__region-range");
        const regionInput = document.querySelector(".calculator__region-count");
        const resetButton = document.querySelector(".calculator__reset");

        const userValues = [10, 20, 30, 40, 50, 100];
        const regionValues = [1, 2, 3, 4, 5, 10];

        const basePrices = {
            base: 15000,
            standard: 25000,
            profi: 35000
        };

        const costTitles = {
            base: document.querySelector(".costs__base .costs__title + .costs__main-info + h5"),
            standard: document.querySelector(".costs__standart .costs__title + .costs__main-info + h5"),
            profi: document.querySelector(".costs__profi .costs__title + .costs__main-info + h5")
        };

        const userCards = document.querySelectorAll(".costs__block .costs__main-info .costs__item:nth-child(1) .costs__item-value");
        const regionCards = document.querySelectorAll(".costs__block .costs__main-info .costs__item:nth-child(2) .costs__item-value");

        const defaultUsers = userValues[0];
        const defaultRegions = regionValues[0];
        let isYearly = false;

        function updateMarks(rangeInput) {
            const rangeContainer = rangeInput.closest('.range');
            const marks = rangeContainer.querySelectorAll('.range-mark');
            marks.forEach((mark, i) => {
                mark.style.visibility = (i == +rangeInput.value) ? 'hidden' : 'visible';
            });
        }

        function updateCards(nodeList, value) {
            nodeList.forEach(el => el.textContent = value);
        }

        function updatePrices() {
            const users = parseInt(userInput.value, 10);
            const regions = parseInt(regionInput.value, 10);

            Object.keys(basePrices).forEach(plan => {
                let price = basePrices[plan];

                if (users > 10) {
                    price += Math.floor((users - 10) / 10) * 1000;
                }

                if (regions > 1) {
                    price += (regions - 1) * 1000;
                }

                if (isYearly) {
                    price = price * 12 * 0.7;
                    costTitles[plan].textContent = `${price.toLocaleString("ru-RU")} ₽/год`;
                } else {
                    costTitles[plan].textContent = `${price.toLocaleString("ru-RU")} ₽/месяц`;
                }
            });
        }

        function updateResetState() {
            resetButton.disabled =
                +userInput.value === defaultUsers &&
                +regionInput.value === defaultRegions &&
                !isYearly;
        }

        function syncSlider(input, slider, valuesArray) {
            const value = parseInt(input.value, 10);
            let index = valuesArray.indexOf(value);

            if (index === -1) {
                if (value < valuesArray[0]) {
                    index = 0;
                } else if (value > valuesArray[valuesArray.length - 1]) {
                    index = valuesArray.length - 1;
                } else {
                    index = valuesArray.findIndex(v => v >= value);
                }
            }

            slider.value = index;
            updateMarks(slider);
        }

        function handleSlider(slider, input, valuesArray, cardNodes) {
            slider.addEventListener("input", () => {
                const index = parseInt(slider.value, 10);
                const value = valuesArray[index];
                input.value = value;
                updateCards(cardNodes, value);
                updateMarks(slider);
                updatePrices();
                updateResetState();
            });
        }

        function handleInput(input, slider, valuesArray, cardNodes) {
            input.addEventListener("input", () => {
                const value = parseInt(input.value, 10);
                if (!isNaN(value)) {
                    updateCards(cardNodes, value);
                    syncSlider(input, slider, valuesArray);
                    updatePrices();
                    updateResetState();
                }
            });
        }

        function handleReset() {
            resetButton.addEventListener("click", () => {
                userRange.value = 0;
                regionRange.value = 0;
                userInput.value = defaultUsers;
                regionInput.value = defaultRegions;
                isYearly = false;
                document.querySelector(".switcher__left").classList.add("switcher__active");
                document.querySelector(".switcher__right").classList.remove("switcher__active");
                updateCards(userCards, defaultUsers);
                updateCards(regionCards, defaultRegions);
                updateMarks(userRange);
                updateMarks(regionRange);
                updatePrices();
                resetButton.disabled = true;
            });
        }

        document.querySelectorAll('.calculator__period-switcher').forEach((switcher) => {
            const left = switcher.querySelector('.switcher__left');
            const right = switcher.querySelector('.switcher__right');

            left.addEventListener('click', () => {
                left.classList.add('switcher__active');
                right.classList.remove('switcher__active');
                isYearly = false;
                updatePrices();
                updateResetState();
            });

            right.addEventListener('click', () => {
                right.classList.add('switcher__active');
                left.classList.remove('switcher__active');
                isYearly = true;
                updatePrices();
                updateResetState();
            });
        });

        function enforceLimits(input, min, max, slider, valuesArray) {
            input.addEventListener("input", () => {
                input.value = input.value.replace(/\D/g, "");

                if (input.value === "") {
                    input.value = min;
                }

                let value = parseInt(input.value, 10);
                if (value < min) value = min;
                if (value > max) value = max;

                input.value = value;
                syncSlider(input, slider, valuesArray);
            });
        }


        enforceLimits(userInput, 1, 1000, userRange, userValues);
        enforceLimits(regionInput, 1, 100, regionRange, regionValues);
        updateMarks(userRange);
        updateMarks(regionRange);
        updateCards(userCards, defaultUsers);
        updateCards(regionCards, defaultRegions);
        updatePrices();

        handleSlider(userRange, userInput, userValues, userCards);
        handleSlider(regionRange, regionInput, regionValues, regionCards);
        handleInput(userInput, userRange, userValues, userCards);
        handleInput(regionInput, regionRange, regionValues, regionCards);
        handleReset();
    });

    const allFeatureBlocks = document.querySelectorAll('.features__block');
    let lastScrollY = window.scrollY;

    allFeatureBlocks.forEach((block) => {
        const desktopCards = block.querySelectorAll('.features__cards_desktop .features__card');
        const mobileCards = block.querySelectorAll('.features__cards_mobile .features__card');

        if (!desktopCards.length && !mobileCards.length) return;

        const mobileCardsContainer = block.querySelector('.features__cards_mobile');

        let currentCardIndex = 0;
        let scrollLocked = false;
        let allowScroll = false;

        const cardsLength = desktopCards.length || mobileCards.length;

        const activateCard = (indexOrElement) => {
            let index;
            if (typeof indexOrElement === 'number') {
                index = indexOrElement;
            } else {
                index = [...desktopCards].indexOf(indexOrElement);
                if (index === -1) {
                    index = [...mobileCards].indexOf(indexOrElement);
                }
            }

            currentCardIndex = index;

            desktopCards.forEach((c, i) => {
                c.classList.toggle('features__card_active', i === index);
            });

            mobileCards.forEach((c, i) => {
                c.classList.toggle('features__card_active', i === index);
            });

            const activeId = desktopCards[index]?.dataset.id || mobileCards[index]?.dataset.id;

            block.querySelectorAll('.features__content-item').forEach(img => {
                img.classList.toggle('active', img.dataset.id === activeId);
            });

            if (mobileCardsContainer && mobileCards[index]) {
                mobileCards[index].scrollIntoView({ behavior: 'smooth', inline: 'center' });
            }
        };

        if (mobileCardsContainer && mobileCards.length) {
            const lastCard = mobileCards[mobileCards.length - 1];

            const mobileScrollObserver = new IntersectionObserver((entries) => {
                const entry = entries[0];
                if (entry.isIntersecting) {
                    allowScroll = true;
                    block.classList.remove('features__block_active');
                }
            }, {
                root: mobileCardsContainer,
                threshold: 0.9,
            });

            mobileScrollObserver.observe(lastCard);
        }

        const scrollHandler = (e) => {
            if (allowScroll || scrollLocked) return;

            const blockRect = block.getBoundingClientRect();

            const scrollingDown = e.deltaY > 0;
            if (!scrollingDown && blockRect.top > window.innerHeight - 100) {
                allowScroll = true;
                window.removeEventListener('wheel', scrollHandler, { passive: false });
                return;
            }

            e.preventDefault();
            scrollLocked = true;

            let nextIndex = scrollingDown
                ? Math.min(cardsLength - 1, currentCardIndex + 1)
                : Math.max(0, currentCardIndex - 1);

            activateCard(nextIndex);

            const isLast = scrollingDown && nextIndex === cardsLength - 1;
            const isFirst = !scrollingDown && nextIndex === 0;

            if (isLast || isFirst) {
                allowScroll = true;
                window.removeEventListener('wheel', scrollHandler, { passive: false });

                setTimeout(() => {
                    block.classList.remove('features__block_active');
                }, 300);
            }

            setTimeout(() => {
                scrollLocked = false;
            }, 400);
        };

        const observer = new IntersectionObserver(
            (entries) => {
                const entry = entries[0];
                const isVisible = entry.isIntersecting && entry.intersectionRatio > 0.5;

                if (!isVisible) return;

                const currentScrollY = window.scrollY;
                const scrollingDown = currentScrollY > lastScrollY;
                lastScrollY = currentScrollY;

                block.classList.add('features__block_active');

                currentCardIndex = scrollingDown ? 0 : cardsLength - 1;
                activateCard(currentCardIndex);

                allowScroll = false;
                scrollLocked = false;

                window.removeEventListener('wheel', scrollHandler, { passive: false });
                window.addEventListener('wheel', scrollHandler, { passive: false });
            },
            { threshold: 0.5 }
        );

        observer.observe(block);
    });

    document.querySelectorAll('.questions__item').forEach(item => {
        const info = item.querySelector('.questions__item-info');
        const img = item.querySelector('.questions__item-img');

        item.addEventListener('click', (e) => {
            if (e.target.closest('a')) return;

            const isActive = item.classList.contains('active');

            if (isActive) {
                item.classList.remove('active');
                info.style.maxHeight = null;
                img.style.transform = 'rotate(0deg)';
            } else {
                item.classList.add('active');
                info.style.maxHeight = info.scrollHeight + 16 + 'px';
                img.style.transform = 'rotate(180deg)';
            }
        });
    });

    // Главное меню
    document.addEventListener("DOMContentLoaded", function () {
        const btn = document.getElementById("btn-dropdown-menu");
        const menu = document.getElementById("dropdown-menu");

        if (btn && menu) {
            btn.addEventListener("click", function (e) {
                e.stopPropagation();
                menu.classList.toggle("show");
            });

            document.addEventListener("click", function (e) {
                if (!btn.contains(e.target)) {
                    menu.classList.remove("show");
                }
            });
        }
    });
    // Мобильное меню
    document.addEventListener("DOMContentLoaded", function () {
        const menuButton = document.querySelector(".nav_mobile .button-icon");
        const mobileMenu = document.querySelector(".nav_mobile-links");

        if (menuButton && mobileMenu) {
            menuButton.addEventListener("click", function (e) {
                e.stopPropagation();
                const isOpening = !mobileMenu.classList.contains("active");

                this.classList.toggle("active", isOpening);

                mobileMenu.classList.toggle("active");
                document.body.classList.toggle("menu-open", isOpening);
                document.body.classList.toggle("menu-backdrop", isOpening);
                //Закрытие выпадающего списка
                const productsButtons = document.querySelectorAll(
                    ".nav_mobile-links_submenu"
                );
                if (productsButtons.length) {
                    productsButtons.forEach((button) => {
                        button.classList.remove("open");
                    });
                }
            });

            // Закрытие меню при клике вне его области
            document.addEventListener("click", function (e) {
                if (
                    !mobileMenu.contains(e.target) &&
                    !menuButton.contains(e.target) &&
                    mobileMenu.classList.contains("active")
                ) {
                    mobileMenu.classList.remove("active");
                    document.body.classList.remove("menu-open");
                    document.body.classList.remove("menu-backdrop");
                }
            });

            // Закрытие меню при клике на ссылки
            document
                .querySelectorAll(
                    ".nav_mobile-link:not(.nav_mobile-links_submenu), .header__sublink-mobile"
                )
                .forEach((link) => {
                    link.addEventListener("click", function () {
                        mobileMenu.classList.remove("active");
                        document.body.classList.remove("menu-open");
                        document.body.classList.remove("menu-backdrop");
                    });
                });
        }

        // Обработчик для выпадающего меню "Продукты" в мобильной версии
        const productsButtons = document.querySelectorAll(
            ".nav_mobile-links_submenu"
        );
        if (productsButtons.length) {
            productsButtons.forEach((button) => {
                button.addEventListener("click", function (e) {
                    // Предотвращаем закрытие меню при клике на подменю
                    e.stopPropagation();

                    // Переключаем состояние только для текущего подменю
                    !this.classList.contains("open");
                    this.classList.toggle("open");

                    // Закрываем другие открытые подменю
                    productsButtons.forEach((otherButton) => {
                        if (
                            otherButton !== this &&
                            otherButton.classList.contains("open")
                        ) {
                            otherButton.classList.remove("open");
                        }
                    });
                });
            });
        }
    });

})();
//# sourceMappingURL=main.js.map

//# sourceMappingURL=data:application/json;charset=utf-8;base64,{"version":3,"file":"main.js","sources":["src/js/common/price.js","src/js/common/features.js","src/js/common/questions.js","src/js/common/header.js"],"sourcesContent":["document.querySelectorAll('.range-input').forEach((rangeInput) => {\n    const rangeContainer = rangeInput.closest('.range');\n    const marks = rangeContainer.querySelectorAll('.range-mark');\n\n    function updateMarks(value) {\n        marks.forEach((mark, i) => {\n            mark.style.visibility = (i == value) ? 'hidden' : 'visible';\n        });\n    }\n\n    rangeInput.addEventListener('input', (e) => {\n        updateMarks(+e.target.value);\n    });\n\n    updateMarks(+rangeInput.value);\n});\n\ndocument.querySelectorAll('.calculator__period-switcher').forEach((switcher) => {\n    const left = switcher.querySelector('.switcher__left');\n    const right = switcher.querySelector('.switcher__right');\n\n    left.addEventListener('click', () => {\n        left.classList.add('switcher__active');\n        right.classList.remove('switcher__active');\n    });\n\n    right.addEventListener('click', () => {\n        right.classList.add('switcher__active');\n        left.classList.remove('switcher__active');\n    });\n});\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const userRange = document.getElementById(\"calculator__users-range\");\n    const userInput = document.querySelector(\".calculator__users-count\");\n    const regionRange = document.getElementById(\"calculator__region-range\");\n    const regionInput = document.querySelector(\".calculator__region-count\");\n    const resetButton = document.querySelector(\".calculator__reset\");\n\n    const userValues = [10, 20, 30, 40, 50, 100];\n    const regionValues = [1, 2, 3, 4, 5, 10];\n\n    const basePrices = {\n        base: 15000,\n        standard: 25000,\n        profi: 35000\n    };\n\n    const costTitles = {\n        base: document.querySelector(\".costs__base .costs__title + .costs__main-info + h5\"),\n        standard: document.querySelector(\".costs__standart .costs__title + .costs__main-info + h5\"),\n        profi: document.querySelector(\".costs__profi .costs__title + .costs__main-info + h5\")\n    };\n\n    const userCards = document.querySelectorAll(\".costs__block .costs__main-info .costs__item:nth-child(1) .costs__item-value\");\n    const regionCards = document.querySelectorAll(\".costs__block .costs__main-info .costs__item:nth-child(2) .costs__item-value\");\n\n    const defaultUsers = userValues[0];\n    const defaultRegions = regionValues[0];\n    let isYearly = false;\n\n    function updateMarks(rangeInput) {\n        const rangeContainer = rangeInput.closest('.range');\n        const marks = rangeContainer.querySelectorAll('.range-mark');\n        marks.forEach((mark, i) => {\n            mark.style.visibility = (i == +rangeInput.value) ? 'hidden' : 'visible';\n        });\n    }\n\n    function updateCards(nodeList, value) {\n        nodeList.forEach(el => el.textContent = value);\n    }\n\n    function updatePrices() {\n        const users = parseInt(userInput.value, 10);\n        const regions = parseInt(regionInput.value, 10);\n\n        Object.keys(basePrices).forEach(plan => {\n            let price = basePrices[plan];\n\n            if (users > 10) {\n                price += Math.floor((users - 10) / 10) * 1000;\n            }\n\n            if (regions > 1) {\n                price += (regions - 1) * 1000;\n            }\n\n            if (isYearly) {\n                price = price * 12 * 0.7;\n                costTitles[plan].textContent = `${price.toLocaleString(\"ru-RU\")} ₽/год`;\n            } else {\n                costTitles[plan].textContent = `${price.toLocaleString(\"ru-RU\")} ₽/месяц`;\n            }\n        });\n    }\n\n    function updateResetState() {\n        resetButton.disabled =\n            +userInput.value === defaultUsers &&\n            +regionInput.value === defaultRegions &&\n            !isYearly;\n    }\n\n    function syncSlider(input, slider, valuesArray) {\n        const value = parseInt(input.value, 10);\n        let index = valuesArray.indexOf(value);\n\n        if (index === -1) {\n            if (value < valuesArray[0]) {\n                index = 0;\n            } else if (value > valuesArray[valuesArray.length - 1]) {\n                index = valuesArray.length - 1;\n            } else {\n                index = valuesArray.findIndex(v => v >= value);\n            }\n        }\n\n        slider.value = index;\n        updateMarks(slider);\n    }\n\n    function handleSlider(slider, input, valuesArray, cardNodes) {\n        slider.addEventListener(\"input\", () => {\n            const index = parseInt(slider.value, 10);\n            const value = valuesArray[index];\n            input.value = value;\n            updateCards(cardNodes, value);\n            updateMarks(slider);\n            updatePrices();\n            updateResetState();\n        });\n    }\n\n    function handleInput(input, slider, valuesArray, cardNodes) {\n        input.addEventListener(\"input\", () => {\n            const value = parseInt(input.value, 10);\n            if (!isNaN(value)) {\n                updateCards(cardNodes, value);\n                syncSlider(input, slider, valuesArray);\n                updatePrices();\n                updateResetState();\n            }\n        });\n    }\n\n    function handleReset() {\n        resetButton.addEventListener(\"click\", () => {\n            userRange.value = 0;\n            regionRange.value = 0;\n            userInput.value = defaultUsers;\n            regionInput.value = defaultRegions;\n            isYearly = false;\n            document.querySelector(\".switcher__left\").classList.add(\"switcher__active\");\n            document.querySelector(\".switcher__right\").classList.remove(\"switcher__active\");\n            updateCards(userCards, defaultUsers);\n            updateCards(regionCards, defaultRegions);\n            updateMarks(userRange);\n            updateMarks(regionRange);\n            updatePrices();\n            resetButton.disabled = true;\n        });\n    }\n\n    document.querySelectorAll('.calculator__period-switcher').forEach((switcher) => {\n        const left = switcher.querySelector('.switcher__left');\n        const right = switcher.querySelector('.switcher__right');\n\n        left.addEventListener('click', () => {\n            left.classList.add('switcher__active');\n            right.classList.remove('switcher__active');\n            isYearly = false;\n            updatePrices();\n            updateResetState();\n        });\n\n        right.addEventListener('click', () => {\n            right.classList.add('switcher__active');\n            left.classList.remove('switcher__active');\n            isYearly = true;\n            updatePrices();\n            updateResetState();\n        });\n    });\n\n    function enforceLimits(input, min, max, slider, valuesArray) {\n        input.addEventListener(\"input\", () => {\n            input.value = input.value.replace(/\\D/g, \"\");\n\n            if (input.value === \"\") {\n                input.value = min;\n            }\n\n            let value = parseInt(input.value, 10);\n            if (value < min) value = min;\n            if (value > max) value = max;\n\n            input.value = value;\n            syncSlider(input, slider, valuesArray);\n        });\n    }\n\n\n    enforceLimits(userInput, 1, 1000, userRange, userValues);\n    enforceLimits(regionInput, 1, 100, regionRange, regionValues);\n    updateMarks(userRange);\n    updateMarks(regionRange);\n    updateCards(userCards, defaultUsers);\n    updateCards(regionCards, defaultRegions);\n    updatePrices();\n\n    handleSlider(userRange, userInput, userValues, userCards);\n    handleSlider(regionRange, regionInput, regionValues, regionCards);\n    handleInput(userInput, userRange, userValues, userCards);\n    handleInput(regionInput, regionRange, regionValues, regionCards);\n    handleReset();\n});\n\n\n\n","\"use strict\";\n\nconst allFeatureBlocks = document.querySelectorAll('.features__block');\nlet lastScrollY = window.scrollY;\n\nallFeatureBlocks.forEach((block) => {\n    const desktopCards = block.querySelectorAll('.features__cards_desktop .features__card');\n    const mobileCards = block.querySelectorAll('.features__cards_mobile .features__card');\n\n    if (!desktopCards.length && !mobileCards.length) return;\n\n    const mobileCardsContainer = block.querySelector('.features__cards_mobile');\n\n    let currentCardIndex = 0;\n    let scrollLocked = false;\n    let allowScroll = false;\n\n    const cardsLength = desktopCards.length || mobileCards.length;\n\n    const activateCard = (indexOrElement) => {\n        let index;\n        if (typeof indexOrElement === 'number') {\n            index = indexOrElement;\n        } else {\n            index = [...desktopCards].indexOf(indexOrElement);\n            if (index === -1) {\n                index = [...mobileCards].indexOf(indexOrElement);\n            }\n        }\n\n        currentCardIndex = index;\n\n        desktopCards.forEach((c, i) => {\n            c.classList.toggle('features__card_active', i === index);\n        });\n\n        mobileCards.forEach((c, i) => {\n            c.classList.toggle('features__card_active', i === index);\n        });\n\n        const activeId = desktopCards[index]?.dataset.id || mobileCards[index]?.dataset.id;\n\n        block.querySelectorAll('.features__content-item').forEach(img => {\n            img.classList.toggle('active', img.dataset.id === activeId);\n        });\n\n        if (mobileCardsContainer && mobileCards[index]) {\n            mobileCards[index].scrollIntoView({ behavior: 'smooth', inline: 'center' });\n        }\n    };\n\n    if (mobileCardsContainer && mobileCards.length) {\n        const lastCard = mobileCards[mobileCards.length - 1];\n\n        const mobileScrollObserver = new IntersectionObserver((entries) => {\n            const entry = entries[0];\n            if (entry.isIntersecting) {\n                allowScroll = true;\n                block.classList.remove('features__block_active');\n            }\n        }, {\n            root: mobileCardsContainer,\n            threshold: 0.9,\n        });\n\n        mobileScrollObserver.observe(lastCard);\n    }\n\n    const scrollHandler = (e) => {\n        if (allowScroll || scrollLocked) return;\n\n        const blockRect = block.getBoundingClientRect();\n\n        const scrollingDown = e.deltaY > 0;\n        if (!scrollingDown && blockRect.top > window.innerHeight - 100) {\n            allowScroll = true;\n            window.removeEventListener('wheel', scrollHandler, { passive: false });\n            return;\n        }\n\n        e.preventDefault();\n        scrollLocked = true;\n\n        let nextIndex = scrollingDown\n            ? Math.min(cardsLength - 1, currentCardIndex + 1)\n            : Math.max(0, currentCardIndex - 1);\n\n        activateCard(nextIndex);\n\n        const isLast = scrollingDown && nextIndex === cardsLength - 1;\n        const isFirst = !scrollingDown && nextIndex === 0;\n\n        if (isLast || isFirst) {\n            allowScroll = true;\n            window.removeEventListener('wheel', scrollHandler, { passive: false });\n\n            setTimeout(() => {\n                block.classList.remove('features__block_active');\n            }, 300);\n        }\n\n        setTimeout(() => {\n            scrollLocked = false;\n        }, 400);\n    };\n\n    const observer = new IntersectionObserver(\n        (entries) => {\n            const entry = entries[0];\n            const isVisible = entry.isIntersecting && entry.intersectionRatio > 0.5;\n\n            if (!isVisible) return;\n\n            const currentScrollY = window.scrollY;\n            const scrollingDown = currentScrollY > lastScrollY;\n            lastScrollY = currentScrollY;\n\n            block.classList.add('features__block_active');\n\n            currentCardIndex = scrollingDown ? 0 : cardsLength - 1;\n            activateCard(currentCardIndex);\n\n            allowScroll = false;\n            scrollLocked = false;\n\n            window.removeEventListener('wheel', scrollHandler, { passive: false });\n            window.addEventListener('wheel', scrollHandler, { passive: false });\n        },\n        { threshold: 0.5 }\n    );\n\n    observer.observe(block);\n});\n","document.querySelectorAll('.questions__item').forEach(item => {\n    const info = item.querySelector('.questions__item-info');\n    const img = item.querySelector('.questions__item-img');\n\n    item.addEventListener('click', (e) => {\n        if (e.target.closest('a')) return;\n\n        const isActive = item.classList.contains('active');\n\n        if (isActive) {\n            item.classList.remove('active');\n            info.style.maxHeight = null;\n            img.style.transform = 'rotate(0deg)';\n        } else {\n            item.classList.add('active');\n            info.style.maxHeight = info.scrollHeight + 16 + 'px';\n            img.style.transform = 'rotate(180deg)';\n        }\n    });\n});\n","// Главное меню\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    const btn = document.getElementById(\"btn-dropdown-menu\");\n    const menu = document.getElementById(\"dropdown-menu\");\n\n    if (btn && menu) {\n        btn.addEventListener(\"click\", function (e) {\n            e.stopPropagation();\n            menu.classList.toggle(\"show\");\n        });\n\n        document.addEventListener(\"click\", function (e) {\n            if (!btn.contains(e.target)) {\n                menu.classList.remove(\"show\");\n            }\n        });\n    }\n});\n// Мобильное меню\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    const menuButton = document.querySelector(\".nav_mobile .button-icon\");\n    const mobileMenu = document.querySelector(\".nav_mobile-links\");\n\n    if (menuButton && mobileMenu) {\n        menuButton.addEventListener(\"click\", function (e) {\n            e.stopPropagation();\n            const isOpening = !mobileMenu.classList.contains(\"active\");\n\n            this.classList.toggle(\"active\", isOpening);\n\n            mobileMenu.classList.toggle(\"active\");\n            document.body.classList.toggle(\"menu-open\", isOpening);\n            document.body.classList.toggle(\"menu-backdrop\", isOpening);\n            //Закрытие выпадающего списка\n            const productsButtons = document.querySelectorAll(\n                \".nav_mobile-links_submenu\"\n            );\n            if (productsButtons.length) {\n                productsButtons.forEach((button) => {\n                    button.classList.remove(\"open\");\n                });\n            }\n        });\n\n        // Закрытие меню при клике вне его области\n        document.addEventListener(\"click\", function (e) {\n            if (\n                !mobileMenu.contains(e.target) &&\n                !menuButton.contains(e.target) &&\n                mobileMenu.classList.contains(\"active\")\n            ) {\n                mobileMenu.classList.remove(\"active\");\n                document.body.classList.remove(\"menu-open\");\n                document.body.classList.remove(\"menu-backdrop\");\n            }\n        });\n\n        // Закрытие меню при клике на ссылки\n        document\n            .querySelectorAll(\n                \".nav_mobile-link:not(.nav_mobile-links_submenu), .header__sublink-mobile\"\n            )\n            .forEach((link) => {\n                link.addEventListener(\"click\", function () {\n                    mobileMenu.classList.remove(\"active\");\n                    document.body.classList.remove(\"menu-open\");\n                    document.body.classList.remove(\"menu-backdrop\");\n                });\n            });\n    }\n\n    // Обработчик для выпадающего меню \"Продукты\" в мобильной версии\n    const productsButtons = document.querySelectorAll(\n        \".nav_mobile-links_submenu\"\n    );\n    if (productsButtons.length) {\n        productsButtons.forEach((button) => {\n            button.addEventListener(\"click\", function (e) {\n                // Предотвращаем закрытие меню при клике на подменю\n                e.stopPropagation();\n\n                // Переключаем состояние только для текущего подменю\n                const isOpening = !this.classList.contains(\"open\");\n                this.classList.toggle(\"open\");\n\n                // Закрываем другие открытые подменю\n                productsButtons.forEach((otherButton) => {\n                    if (\n                        otherButton !== this &&\n                        otherButton.classList.contains(\"open\")\n                    ) {\n                        otherButton.classList.remove(\"open\");\n                    }\n                });\n            });\n        });\n    }\n});\n"],"names":[],"mappings":"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"}